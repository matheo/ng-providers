{"version":3,"sources":["webpack:///media/work/git/github/ng-providers/libs/common/src/index.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/tokens/error.token.ts","webpack:///src/environments/environment.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/tokens/api.token.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/common.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/services/error-handler.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/services/tree-shakeable.service.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/components/display/display.component.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/components/display/display.component.html","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/services/http.service.ts","webpack:///media/work/git/github/ng-providers/libs/common/src/lib/services/interceptor.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ERROR_RETRY_TOKEN","environment","production","API_URL_TOKEN","MyCommonModule","config","ngModule","providers","provide","useValue","apiUrl","errorRetry","useClass","multi","imports","declarations","exports","AppComponent","title","selector","templateUrl","styleUrls","ErrorHandlerService","i","count","console","log","request","next","handle","AppModule","forRoot","bootstrap","routes","path","component","loadChildren","then","m","Mod1Module","Mod2Module","TreeShakeableService","providedIn","DisplayComponent","cdr","http","shakeable","interceptors","name","list","subscribe","data","markForCheck","map","constructor","changeDetection","OnPush","HttpService","httpHandler","InterceptorService","injector","errorHandler","get","getResult","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './lib/common.module';\n\nexport * from './lib/components/display/display.component';\nexport * from './lib/services/http.service';\nexport * from './lib/services/tree-shakeable.service';\nexport * from './lib/tokens/api.token';\n","import { InjectionToken } from '@angular/core';\n\nexport const ERROR_RETRY_TOKEN = new InjectionToken<string>('errorRetry');\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { InjectionToken } from '@angular/core';\n\nexport const API_URL_TOKEN = new InjectionToken<string>('apiUrl');\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DisplayComponent } from './components/display/display.component';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { HttpService } from './services/http.service';\nimport { InterceptorService } from './services/interceptor.service';\nimport { API_URL_TOKEN } from './tokens/api.token';\nimport { ERROR_RETRY_TOKEN } from './tokens/error.token';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    DisplayComponent,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    DisplayComponent,\n  ],\n})\nexport class MyCommonModule {\n  static forRoot(config: {\n    apiUrl: string;\n    errorRetry?: string;\n}): ModuleWithProviders<MyCommonModule> {\n    return {\n        ngModule: MyCommonModule,\n        providers: [\n            HttpService,\n            ErrorHandlerService,\n            {\n                provide: API_URL_TOKEN,\n                useValue: config.apiUrl,\n            },\n            {\n                provide: ERROR_RETRY_TOKEN,\n                useValue: config.errorRetry || 'defaultRetry',\n            },\n            {\n                provide: HTTP_INTERCEPTORS,\n                useClass: InterceptorService,\n                multi: true,\n            }\n        ]\n    };\n}\n\n  static forChild(config: {\n    apiUrl?: string;\n    errorRetry?: string;\n}): ModuleWithProviders<MyCommonModule> {\n    return {\n        ngModule: MyCommonModule,\n        providers: [\n            /**\n             * The services using the Token needs to be provided\n             * in the same level of the hierarchy tree to use it instead the parent one.\n             */\n            !config.apiUrl\n                ? []\n                : [\n                    HttpService,\n                    {\n                        provide: API_URL_TOKEN,\n                        useValue: config.apiUrl,\n                    },\n                ],\n            !config.errorRetry\n                ? []\n                : [\n                    ErrorHandlerService,\n                    {\n                        provide: ERROR_RETRY_TOKEN,\n                        useValue: config.errorRetry,\n                    }\n                ],\n        ]\n    };\n}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'website';\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row>\n    <span>NgProviders</span>\n\n    <span fxFlex></span>\n\n    <button mat-button routerLink=\"\">Root</button>\n    <button mat-button routerLink=\"mod1\">Module 1</button>\n    <button mat-button routerLink=\"mod1/submod1\">SubModule 1</button>\n    <button mat-button routerLink=\"mod2\">Module 2</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { API_URL_TOKEN } from '../tokens/api.token';\nimport { ERROR_RETRY_TOKEN } from '../tokens/error.token';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ErrorHandlerService {\n  static count = 1;\n  i: number;\n\n  constructor(\n    @Inject(API_URL_TOKEN) private apiUrl: string,\n    @Inject(ERROR_RETRY_TOKEN) private errorRetry: string,\n  ) {\n    this.i = ErrorHandlerService.count;\n    ErrorHandlerService.count++;\n\n    console.log(`new ErrorHandlerService(${this.i})(${this.apiUrl}) w/ ${this.errorRetry}`);\n  }\n\n  getResult(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log(`used ErrorHandler(${this.i})(${this.apiUrl})`);\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { MyCommonModule } from '@matheo/common';\nimport { AppComponent } from './app.component';\nimport { routes } from './app.routing';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MyCommonModule.forRoot({\n      apiUrl: 'root',\n    }),\n    RouterModule.forRoot(routes),\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nexport class AppModule {}\n","import { Routes } from '@angular/router';\nimport { DisplayComponent } from '@matheo/common';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: DisplayComponent,\n  },\n  {\n    path: 'mod1',\n    loadChildren: () => import('./mod1/mod1.module').then(m => m.Mod1Module),\n  },\n  {\n    path: 'mod2',\n    loadChildren: () => import('./mod2/mod2.module').then(m => m.Mod2Module),\n  },\n];\n","import { Injectable, Inject } from '@angular/core';\nimport { API_URL_TOKEN } from '../tokens/api.token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TreeShakeableService {\n  constructor(\n    @Inject(API_URL_TOKEN) private apiUrl: string\n  ) {\n    console.log(`new TreeShakeableService(${this.apiUrl})`);\n  }\n\n  print() {\n    return `TreeShakeableService API_URL: ${this.apiUrl}`;\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit, ChangeDetectorRef, Inject } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { TreeShakeableService } from '../../services/tree-shakeable.service';\n\n@Component({\n  selector: 'common-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DisplayComponent implements OnInit {\n  name = 'Loading...'\n  list: string[] = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public http: HttpService,\n    public shakeable: TreeShakeableService,\n    @Inject(HTTP_INTERCEPTORS) public interceptors: any[],\n  ) { }\n\n  ngOnInit(): void {\n    this.http.name().subscribe(data => {\n      this.name = data['name'];\n      this.cdr.markForCheck();\n    });\n\n    this.list = this.interceptors.map(i => i.constructor.name);\n  }\n}\n","<h2>{{ name }}</h2>\n\n<!--p>{{ http.print() }}</p-->\n\n<!--p>{{ shakeable.print() }}</p-->\n\n<p>HTTP_INTERCEPTORS</p>\n\n<ul>\n  <li *ngFor=\"let interceptor of list\">{{ interceptor }}</li>\n</ul>\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHandler } from '@angular/common/http';\nimport { API_URL_TOKEN } from '../tokens/api.token';\n\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    httpHandler: HttpHandler,\n    @Inject(API_URL_TOKEN) private apiUrl: string\n  ) {\n    super(httpHandler);\n\n    console.log(`new HttpService(${this.apiUrl})`);\n  }\n\n  name() {\n    return super.get(`assets/${this.apiUrl}.json`);\n  }\n\n  print() {\n    return `HttpService API_URL: ${this.apiUrl}`;\n  }\n}\n","import { Injectable, Injector, Inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { API_URL_TOKEN } from '../tokens/api.token';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable()\nexport class InterceptorService {\n  errorHandler: ErrorHandlerService;\n\n  constructor(\n    private injector: Injector,\n    @Inject(API_URL_TOKEN) private apiUrl: string,\n  ) {\n    this.errorHandler = this.injector.get(ErrorHandlerService);\n\n    console.log(`new InterceptorService(${this.apiUrl}) w/ errorHandler(${this.errorHandler.i})`);\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.errorHandler.getResult(request, next);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}