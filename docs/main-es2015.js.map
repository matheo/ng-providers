{"version":3,"sources":["/media/work/git/github/ng-providers/libs/common/src/index.ts","/media/work/git/github/ng-providers/libs/common/src/lib/tokens/error.token.ts","./src/environments/environment.ts","/media/work/git/github/ng-providers/libs/common/src/lib/tokens/api.token.ts","/media/work/git/github/ng-providers/libs/common/src/lib/common.module.ts","./src/app/app.component.ts","./src/app/app.component.html","/media/work/git/github/ng-providers/libs/common/src/lib/services/error-handler.service.ts","./src/app/app.module.ts","./src/app/app.routing.ts","/media/work/git/github/ng-providers/libs/common/src/lib/services/tree-shakeable.service.ts","/media/work/git/github/ng-providers/libs/common/src/lib/components/display/display.component.ts","/media/work/git/github/ng-providers/libs/common/src/lib/components/display/display.component.html","/media/work/git/github/ng-providers/libs/common/src/lib/services/http.service.ts","/media/work/git/github/ng-providers/libs/common/src/lib/services/interceptor.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export * from './lib/common.module';\n\nexport * from './lib/components/display/display.component';\nexport * from './lib/services/http.service';\nexport * from './lib/services/tree-shakeable.service';\nexport * from './lib/tokens/api.token';\n","import { InjectionToken } from '@angular/core';\n\nexport const ERROR_RETRY_TOKEN = new InjectionToken<string>('errorRetry');\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { InjectionToken } from '@angular/core';\n\nexport const API_URL_TOKEN = new InjectionToken<string>('apiUrl');\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DisplayComponent } from './components/display/display.component';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { HttpService } from './services/http.service';\nimport { InterceptorService } from './services/interceptor.service';\nimport { API_URL_TOKEN } from './tokens/api.token';\nimport { ERROR_RETRY_TOKEN } from './tokens/error.token';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    DisplayComponent,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    DisplayComponent,\n  ],\n})\nexport class MyCommonModule {\n  static forRoot(config: {\n    apiUrl: string;\n    errorRetry?: string;\n}): ModuleWithProviders<MyCommonModule> {\n    return {\n        ngModule: MyCommonModule,\n        providers: [\n            HttpService,\n            ErrorHandlerService,\n            {\n                provide: API_URL_TOKEN,\n                useValue: config.apiUrl,\n            },\n            {\n                provide: ERROR_RETRY_TOKEN,\n                useValue: config.errorRetry || 'defaultRetry',\n            },\n            {\n                provide: HTTP_INTERCEPTORS,\n                useClass: InterceptorService,\n                multi: true,\n            }\n        ]\n    };\n}\n\n  static forChild(config: {\n    apiUrl?: string;\n    errorRetry?: string;\n}): ModuleWithProviders<MyCommonModule> {\n    return {\n        ngModule: MyCommonModule,\n        providers: [\n            /**\n             * The services using the Token needs to be provided\n             * in the same level of the hierarchy tree to use it instead the parent one.\n             */\n            !config.apiUrl\n                ? []\n                : [\n                    HttpService,\n                    {\n                        provide: API_URL_TOKEN,\n                        useValue: config.apiUrl,\n                    },\n                ],\n            !config.errorRetry\n                ? []\n                : [\n                    ErrorHandlerService,\n                    {\n                        provide: ERROR_RETRY_TOKEN,\n                        useValue: config.errorRetry,\n                    }\n                ],\n        ]\n    };\n}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'website';\n}\n","<mat-toolbar color=\"accent\">\n  <mat-toolbar-row>\n    <span>NgProviders</span>\n\n    <span fxFlex></span>\n\n    <button mat-button routerLink=\"\">Root</button>\n    <button mat-button routerLink=\"mod1\">Module 1</button>\n    <button mat-button routerLink=\"mod1/submod1\">SubModule 1</button>\n    <button mat-button routerLink=\"mod2\">Module 2</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { API_URL_TOKEN } from '../tokens/api.token';\nimport { ERROR_RETRY_TOKEN } from '../tokens/error.token';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ErrorHandlerService {\n  static count = 1;\n  i: number;\n\n  constructor(\n    @Inject(API_URL_TOKEN) private apiUrl: string,\n    @Inject(ERROR_RETRY_TOKEN) private errorRetry: string,\n  ) {\n    this.i = ErrorHandlerService.count;\n    ErrorHandlerService.count++;\n\n    console.log(`new ErrorHandlerService(${this.i})(${this.apiUrl}) w/ ${this.errorRetry}`);\n  }\n\n  getResult(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log(`used ErrorHandler(${this.i})(${this.apiUrl})`);\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { RouterModule } from '@angular/router';\nimport { MyCommonModule } from '@matheo/common';\nimport { AppComponent } from './app.component';\nimport { routes } from './app.routing';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MyCommonModule.forRoot({\n      apiUrl: 'root',\n    }),\n    RouterModule.forRoot(routes),\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nexport class AppModule {}\n","import { Routes } from '@angular/router';\nimport { DisplayComponent } from '@matheo/common';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: DisplayComponent,\n  },\n  {\n    path: 'mod1',\n    loadChildren: () => import('./mod1/mod1.module').then(m => m.Mod1Module),\n  },\n  {\n    path: 'mod2',\n    loadChildren: () => import('./mod2/mod2.module').then(m => m.Mod2Module),\n  },\n];\n","import { Injectable, Inject } from '@angular/core';\nimport { API_URL_TOKEN } from '../tokens/api.token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TreeShakeableService {\n  constructor(\n    @Inject(API_URL_TOKEN) private apiUrl: string\n  ) {\n    console.log(`new TreeShakeableService(${this.apiUrl})`);\n  }\n\n  print() {\n    return `TreeShakeableService API_URL: ${this.apiUrl}`;\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit, ChangeDetectorRef, Inject } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { TreeShakeableService } from '../../services/tree-shakeable.service';\n\n@Component({\n  selector: 'common-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DisplayComponent implements OnInit {\n  name = 'Loading...'\n  list: string[] = [];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public http: HttpService,\n    public shakeable: TreeShakeableService,\n    @Inject(HTTP_INTERCEPTORS) public interceptors: any[],\n  ) { }\n\n  ngOnInit(): void {\n    this.http.name().subscribe(data => {\n      this.name = data['name'];\n      this.cdr.markForCheck();\n    });\n\n    this.list = this.interceptors.map(i => i.constructor.name);\n  }\n}\n","<h2>{{ name }}</h2>\n\n<!--p>{{ http.print() }}</p-->\n\n<!--p>{{ shakeable.print() }}</p-->\n\n<p>HTTP_INTERCEPTORS</p>\n\n<ul>\n  <li *ngFor=\"let interceptor of list\">{{ interceptor }}</li>\n</ul>\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHandler } from '@angular/common/http';\nimport { API_URL_TOKEN } from '../tokens/api.token';\n\n@Injectable()\nexport class HttpService extends HttpClient {\n  constructor(\n    httpHandler: HttpHandler,\n    @Inject(API_URL_TOKEN) private apiUrl: string\n  ) {\n    super(httpHandler);\n\n    console.log(`new HttpService(${this.apiUrl})`);\n  }\n\n  name() {\n    return super.get(`assets/${this.apiUrl}.json`);\n  }\n\n  print() {\n    return `HttpService API_URL: ${this.apiUrl}`;\n  }\n}\n","import { Injectable, Injector, Inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { API_URL_TOKEN } from '../tokens/api.token';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable()\nexport class InterceptorService {\n  errorHandler: ErrorHandlerService;\n\n  constructor(\n    private injector: Injector,\n    @Inject(API_URL_TOKEN) private apiUrl: string,\n  ) {\n    this.errorHandler = this.injector.get(ErrorHandlerService);\n\n    console.log(`new InterceptorService(${this.apiUrl}) w/ errorHandler(${this.errorHandler.i})`);\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.errorHandler.getResult(request, next);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}